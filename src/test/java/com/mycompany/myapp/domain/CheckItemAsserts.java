package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CheckItemAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCheckItemAllPropertiesEquals(CheckItem expected, CheckItem actual) {
        assertCheckItemAutoGeneratedPropertiesEquals(expected, actual);
        assertCheckItemAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCheckItemAllUpdatablePropertiesEquals(CheckItem expected, CheckItem actual) {
        assertCheckItemUpdatableFieldsEquals(expected, actual);
        assertCheckItemUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCheckItemAutoGeneratedPropertiesEquals(CheckItem expected, CheckItem actual) {
        assertThat(actual)
            .as("Verify CheckItem auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCheckItemUpdatableFieldsEquals(CheckItem expected, CheckItem actual) {
        assertThat(actual)
            .as("Verify CheckItem relevant properties")
            .satisfies(a -> assertThat(a.getCheckItemId()).as("check checkItemId").isEqualTo(expected.getCheckItemId()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getState()).as("check state").isEqualTo(expected.getState()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCheckItemUpdatableRelationshipsEquals(CheckItem expected, CheckItem actual) {
        //        assertThat(actual)
        //            .as("Verify CheckItem relationships")
        //            .satisfies(a -> assertThat(a.getData()).as("check data").isEqualTo(expected.getData()))
        //            .satisfies(a -> assertThat(a.getCheckList()).as("check checkList").isEqualTo(expected.getCheckList()));
    }
}
