package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BoardAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardAllPropertiesEquals(Board expected, Board actual) {
        assertBoardAutoGeneratedPropertiesEquals(expected, actual);
        assertBoardAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardAllUpdatablePropertiesEquals(Board expected, Board actual) {
        assertBoardUpdatableFieldsEquals(expected, actual);
        assertBoardUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardAutoGeneratedPropertiesEquals(Board expected, Board actual) {
        assertThat(actual)
            .as("Verify Board auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardUpdatableFieldsEquals(Board expected, Board actual) {
        assertThat(actual)
            .as("Verify Board relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getVisibility()).as("check visibility").isEqualTo(expected.getVisibility()))
            .satisfies(a -> assertThat(a.getTrelloId()).as("check trelloId").isEqualTo(expected.getTrelloId()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()))
            .satisfies(a -> assertThat(a.getCreatedBy()).as("check createdBy").isEqualTo(expected.getCreatedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardUpdatableRelationshipsEquals(Board expected, Board actual) {
        assertThat(actual)
            .as("Verify Board relationships")
            .satisfies(a -> assertThat(a.getWorkspace()).as("check workspace").isEqualTo(expected.getWorkspace()));
    }
}
