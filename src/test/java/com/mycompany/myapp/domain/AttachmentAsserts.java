package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AttachmentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttachmentAllPropertiesEquals(Attachment expected, Attachment actual) {
        assertAttachmentAutoGeneratedPropertiesEquals(expected, actual);
        assertAttachmentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttachmentAllUpdatablePropertiesEquals(Attachment expected, Attachment actual) {
        assertAttachmentUpdatableFieldsEquals(expected, actual);
        assertAttachmentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttachmentAutoGeneratedPropertiesEquals(Attachment expected, Attachment actual) {
        assertThat(actual)
            .as("Verify Attachment auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttachmentUpdatableFieldsEquals(Attachment expected, Attachment actual) {
        assertThat(actual)
            .as("Verify Attachment relevant properties")
            .satisfies(a -> assertThat(a.getFileName()).as("check fileName").isEqualTo(expected.getFileName()))
            .satisfies(a -> assertThat(a.getFileUrl()).as("check fileUrl").isEqualTo(expected.getFileUrl()))
            .satisfies(a -> assertThat(a.getFileSize()).as("check fileSize").isEqualTo(expected.getFileSize()))
            .satisfies(a -> assertThat(a.getUploadedAt()).as("check uploadedAt").isEqualTo(expected.getUploadedAt()))
            .satisfies(a -> assertThat(a.getAttachmentId()).as("check source").isEqualTo(expected.getAttachmentId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttachmentUpdatableRelationshipsEquals(Attachment expected, Attachment actual) {
        assertThat(actual)
            .as("Verify Attachment relationships")
            .satisfies(a -> assertThat(a.getCard()).as("check card").isEqualTo(expected.getCard()));
    }
}
