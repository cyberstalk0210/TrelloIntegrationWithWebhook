package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BoardListAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardListAllPropertiesEquals(BoardList expected, BoardList actual) {
        assertBoardListAutoGeneratedPropertiesEquals(expected, actual);
        assertBoardListAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardListAllUpdatablePropertiesEquals(BoardList expected, BoardList actual) {
        assertBoardListUpdatableFieldsEquals(expected, actual);
        assertBoardListUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardListAutoGeneratedPropertiesEquals(BoardList expected, BoardList actual) {
        assertThat(actual)
            .as("Verify BoardList auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardListUpdatableFieldsEquals(BoardList expected, BoardList actual) {
        assertThat(actual)
            .as("Verify BoardList relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getPosition()).as("check position").isEqualTo(expected.getPosition()))
            .satisfies(a -> assertThat(a.getTrelloId()).as("check trelloId").isEqualTo(expected.getTrelloId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardListUpdatableRelationshipsEquals(BoardList expected, BoardList actual) {
        assertThat(actual)
            .as("Verify BoardList relationships")
            .satisfies(a -> assertThat(a.getBoard()).as("check board").isEqualTo(expected.getBoard()));
    }
}
